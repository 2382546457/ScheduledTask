<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaohe.admin.mapper.XxlJobInfoMapper">
    <resultMap id="XxlJobInfo" type="com.xiaohe.admin.core.model.XxlJobInfo">
        <result column="id" property="id" />

        <result column="job_group" property="jobGroup" />
        <result column="job_desc" property="jobDesc" />

        <result column="add_time" property="addTime" />
        <result column="update_time" property="updateTime" />

        <result column="author" property="author" />
        <result column="alarm_email" property="alarmEmail" />

        <result column="schedule_type" property="scheduleType" />
        <result column="schedule_conf" property="scheduleConf" />
        <result column="misfire_strategy" property="misfireStrategy" />

        <result column="executor_route_strategy" property="executorRouteStrategy" />
        <result column="executor_handler" property="executorHandler" />
        <result column="executor_param" property="executorParam" />
        <result column="executor_block_strategy" property="executorBlockStrategy" />
        <result column="executor_timeout" property="executorTimeout" />
        <result column="executor_fail_retry_count" property="executorFailRetryCount" />

        <result column="glue_type" property="glueType" />
        <result column="glue_source" property="glueSource" />
        <result column="glue_remark" property="glueRemark" />
        <result column="glue_updatetime" property="glueUpdatetime" />

        <result column="child_jobid" property="childJobId" />

        <result column="trigger_status" property="triggerStatus" />
        <result column="trigger_last_time" property="triggerLastTime" />
        <result column="trigger_next_time" property="triggerNextTime" />
    </resultMap>
    <sql id="Base_Column_List">
        t.id,
		t.job_group,
		t.job_desc,
		t.add_time,
		t.update_time,
		t.author,
		t.alarm_email,
		t.schedule_type,
		t.schedule_conf,
		t.misfire_strategy,
		t.executor_route_strategy,
		t.executor_handler,
		t.executor_param,
		t.executor_block_strategy,
		t.executor_timeout,
		t.executor_fail_retry_count,
		t.glue_type,
		t.glue_source,
		t.glue_remark,
		t.glue_updatetime,
		t.child_jobid,
		t.trigger_status,
		t.trigger_last_time,
		t.trigger_next_time
    </sql>

    <!--    根据id查找对应任务-->
    <select id="loadById" resultType="com.xiaohe.admin.core.model.XxlJobInfo">
        select <include refid="Base_Column_List"/>
            from xxl_job_info as t
        where id =#{jobId}
    </select>

<!--    查看某执行器组所负责的所有定时任务-->
    <select id="getJobsByJobGroup" resultType="com.xiaohe.admin.core.model.XxlJobInfo">
        SELECT <include refid="Base_Column_List"/>
        from xxl_job_info t
        where t.`job_group` = #{jobGroup}
    </select>

<!--    分页查询定时任务的详细信息-->
    <select id="pageList" resultType="com.xiaohe.admin.core.model.XxlJobInfo">
        select
        <include refid="Base_Column_List"/>
        from xxl_job_info t
        <where>
            <if test="jobGroup gt 0">
                and t.`job_group` = #{jobGroup}
            </if>
            <if test="triggerStatus gte 0">
                and t.`triggerStatus` = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                and t.`job_desc` like concat('%', #{jobDesc}, '%')
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                and t.`executor_handler` like concat('%', #{executorHandler}, '%')
            </if>
            <if test="author != null and author != ''">
                and t.`author` like concat('%', #{author}, '%')
            </if>
        </where>
        order by id desc
        limit #{start} , #{length}
    </select>

    <!--    添加任务-->
    <insert id="save" parameterType="com.xiaohe.admin.core.model.XxlJobInfo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO xxl_job_info (
            job_group,
            job_desc,
            add_time,
            update_time,
            author,
            alarm_email,
            schedule_type,
            schedule_conf,
            misfire_strategy,
            executor_route_strategy,
            executor_handler,
            executor_param,
            executor_block_strategy,
            executor_timeout,
            executor_fail_retry_count,
            glue_type,
            glue_source,
            glue_remark,
            glue_updatetime,
            child_jobid,
            trigger_status,
            trigger_last_time,
            trigger_next_time
        ) VALUES (
                     #{jobGroup},
                     #{jobDesc},
                     #{addTime},
                     #{updateTime},
                     #{author},
                     #{alarmEmail},
                     #{scheduleType},
                     #{scheduleConf},
                     #{misfireStrategy},
                     #{executorRouteStrategy},
                     #{executorHandler},
                     #{executorParam},
                     #{executorBlockStrategy},
                     #{executorTimeout},
                     #{executorFailRetryCount},
                     #{glueType},
                     #{glueSource},
                     #{glueRemark},
                     #{glueUpdatetime},
                     #{childJobId},
                     #{triggerStatus},
                     #{triggerLastTime},
                     #{triggerNextTime}
                 );
    </insert>

    <delete id="delete">
        delete from xxl_job_info
        where id = #{id}
    </delete>

    <select id="scheduleJobQuery" resultType="com.xiaohe.admin.core.model.XxlJobInfo">
        select <include refid="Base_Column_List"/>
        from xxl_job_info t
        where t.trigger_status = 1
        and t.trigger_next_time <![CDATA[ <= ]]]> #{maxNextTime}
        order by id asc
        limit #{maxCount}
    </select>
    <update id="scheduleUpdate">
        <foreach collection="xxlJobInfos" item="xxlJob" separator=";" >
            update xxl_job_info t
            set
                t.`trigger_last_time` = #{xxlJob.triggerLastTime},
                t.`trigger_next_time` = #{xxlJob.triggerNextTime},
                t.`trigger_status` = #{xxlJob.triggerStatus}
            where id = #{xxlJob.id}
        </foreach>
    </update>
</mapper>
