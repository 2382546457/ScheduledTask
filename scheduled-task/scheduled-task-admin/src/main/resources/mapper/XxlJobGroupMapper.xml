<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaohe.admin.mapper.XxlJobGroupMapper">

    <resultMap id="XxlJobGroup" type="com.xiaohe.admin.core.model.XxlJobGroup">
        <result property="id" column="id"/>
        <result property="appname" column="app_name"/>
        <result property="title" column="title"/>
        <result property="addressType" column="address_type"/>
        <result property="addressList" column="address_list"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        t.id,
        t.appname,
        t.title,
        t.address_type,
        t.address_list,
        t.update_time
    </sql>

    <select id="findAll" resultType="com.xiaohe.admin.core.model.XxlJobGroup">
        SELECT <include refid="Base_Column_List" />
            FROM xxl_job_group AS t
        ORDER BY t.app_name, t.title, t.id ASC
    </select>

<!--    根据id查询执行器组-->
    <select id="load" resultType="com.xiaohe.admin.core.model.XxlJobGroup">
        select <include refid="Base_Column_List"/>
        from xxl_job_group as t
        where t.`id` = #{jobGroup}
    </select>
<!--    查找自动注册的执行器组-->
    <select id="findByAddressType" resultType="com.xiaohe.admin.core.model.XxlJobGroup">
        select <include refid="Base_Column_List"/>
        from xxl_job_group as t
        where t.`address_type` = #{addressType}
    </select>

<!--    批量更新-->
    <update id="updateBatch" parameterType="com.xiaohe.admin.core.model.XxlJobGroup">
        <foreach collection="groupList" item="group" separator=";">
            update xxl_job_group
            set `appname` = #{group.appname},
                `title` = #{group.title},
                `address_type` = #{group.addressType},
                `address_list` = #{group.addressList},
                `update_time` = #{group.updateTime}
            where `id` = #{group.id}
        </foreach>
    </update>

    <select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobGroup">
        SELECT <include refid="Base_Column_List" />
        FROM xxl_job_group AS t
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="appname != null and appname != ''">
                AND t.app_name like CONCAT(CONCAT('%', #{appname}), '%')
            </if>
            <if test="title != null and title != ''">
                AND t.title like CONCAT(CONCAT('%', #{title}), '%')
            </if>
        </trim>
        ORDER BY t.app_name, t.title, t.id ASC
        LIMIT #{offset}, #{pagesize}
    </select>

    <select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
        SELECT count(1)
        FROM xxl_job_group AS t
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="appname != null and appname != ''">
                AND t.app_name like CONCAT(CONCAT('%', #{appname}), '%')
            </if>
            <if test="title != null and title != ''">
                AND t.title like CONCAT(CONCAT('%', #{title}), '%')
            </if>
        </trim>
    </select>


    <insert id="save" parameterType="com.xiaohe.admin.core.model.XxlJobGroup" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO xxl_job_group ( `app_name`, `title`, `address_type`, `address_list`, `update_time`)
        values ( #{appname}, #{title}, #{addressType}, #{addressList}, #{updateTime} );
    </insert>

    <update id="update" parameterType="com.xiaohe.admin.core.model.XxlJobGroup">
        UPDATE xxl_job_group
        SET `app_name` = #{appname},
            `title` = #{title},
            `address_type` = #{addressType},
            `address_list` = #{addressList},
            `update_time` = #{updateTime}
        WHERE id = #{id}
    </update>


    <delete id="remove" parameterType="java.lang.Integer" >
        DELETE FROM xxl_job_group
        WHERE id = #{id}
    </delete>

</mapper>
